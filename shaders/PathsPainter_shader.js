/* eslint-disable */
export default "precision mediump float;\nvarying vec2 vPosition;\nuniform mat3 uMatrixInverse;\nuniform sampler2D uData;\nuniform vec2 uTextureSize;\n\n// Signed distance to a line segment\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b ) {\n  vec2 pa = p-a, ba = b-a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h );\n}\n\n// Given an index into our \"vec3 data array\", returns the vec3\nvec4 fetch( in int index ) {\n  vec2 coordinates = vec2( mod( float( index ), uTextureSize.x ), floor( float( index ) / uTextureSize.x ) );\n  return texture2D( uData, ( coordinates + 0.5 ) / uTextureSize );\n}\n\nvec2 globalToModel( in vec2 modelPoint ) {\n  return ( uMatrixInverse * vec3( modelPoint, 1.0 ) ).xy;\n}\n\n// Returns the color from the vertex shader\nvoid main( void ) {\n  vec2 position0 = fetch( 0 ).xy;\n  vec2 position1 = fetch( 1 ).xy;\n\n  vec2 modelPosition = globalToModel( vPosition );\n\n//  float dist = smoothstep( 50.0, 10.0, distance(modelPosition, vec2( 0, 0 )) );\n//  float dist = smoothstep( 50.0, 10.0, distance(modelPosition, position0) );\n  float dist = smoothstep( 4.0, 2.0, sdSegment( modelPosition, position0, position1 ) );\n  gl_FragColor = vec4( vec3( dist ), 0.5 );\n}"